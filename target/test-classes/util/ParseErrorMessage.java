package util;

import java.util.HashMap;
import java.util.Map;

public enum ParseErrorMessage {
    I18N_TYPE_MSGCODE("errorCode",ErrorMessage.I18N_TYPE_MSGCODE),
    SUCESS("message_0000",ErrorMessage.SUCESS),
    SAVE_SUCESS("message_0001",ErrorMessage.SAVE_SUCESS),
    ERROR_WORKFLOW_PARAM_CHECK("message_1001", ErrorMessage.ERROR_WORKFLOW_PARAM_CHECK),
    ERROR_WORKFLOW_STARTUP_ERROR("message_1002",ErrorMessage.ERROR_WORKFLOW_STARTUP_ERROR),
    ERROR_WORKFLOW_APPROVE_ERROR("message_1004",ErrorMessage.ERROR_WORKFLOW_APPROVE_ERROR),
    ERROR_WORKFLOW_UPDATE_PARAM("message_1005",ErrorMessage.ERROR_WORKFLOW_UPDATE_PARAM),
    ERROR_SYSTEM_INNER("message_4999",ErrorMessage.ERROR_SYSTEM_INNER),
    ERROR_PARAM_ERR("message_5000", ErrorMessage.ERROR_PARAM_ERR),
    ERROR_DATA_TOOLONG("message_5001",ErrorMessage.ERROR_DATA_TOOLONG),
    ERROR_EVALUATE_USER("message_8003", ErrorMessage.ERROR_EVALUATE_USER),
    ERROR_DATA_FAILED("message_8004",ErrorMessage.ERROR_DATA_FAILED),
    ERROR_PRIMKEY_NULL("message_8005", ErrorMessage.ERROR_PRIMKEY_NULL),
    ERROR_SINGLE_NULL("message_8006",ErrorMessage.ERROR_SINGLE_NULL),
    ERROR_FEEDBACK_SAVE_ERR("message_8007",ErrorMessage.ERROR_FEEDBACK_SAVE_ERR),
    ERROR_FEEDBACK_NEW_ERR("message_8008",ErrorMessage.ERROR_FEEDBACK_NEW_ERR),
    ERROR_FEEDBACK_EACH_ERR("message_8009", ErrorMessage.ERROR_FEEDBACK_EACH_ERR),
    ERROR_DATA_PRIMKEY_SINGLE("message_8010", ErrorMessage.ERROR_DATA_PRIMKEY_SINGLE),

    ERROR_EVALUATEINFO_BYID("message_8012", ErrorMessage.ERROR_EVALUATEINFO_BYID),
    ERROR_EVALUATEUSER_EXIST("message_8013", ErrorMessage.ERROR_EVALUATEUSER_EXIST),
    ERROR_EVALUATEUSER_OTHERINTERFACE_EXIST("message_8014",ErrorMessage.ERROR_EVALUATEUSER_OTHERINTERFACE_EXIST),
    ERROR_INSERT_SUMMARY("message_8020",ErrorMessage.ERROR_INSERT_SUMMARY),
    ERROR_GETBYPROJECTID_ERR("message_8021",ErrorMessage.ERROR_GETBYPROJECTID_ERR),
    ERROR_UPLOADFILE_ERROR("message_9001",ErrorMessage.ERROR_UPLOADFILE_ERROR),
    ERROR_UPLOADFILE_NULL("message_9002", ErrorMessage.ERROR_UPLOADFILE_NULL),
    ERROR_UPLOADFILE_EX("message_9003", ErrorMessage.ERROR_UPLOADFILE_EX),
    ERROR_UPLOADFILE_DELEX("message_9004",ErrorMessage.ERROR_UPLOADFILE_DELEX),
    ERROR_UPLOADFILE_PARAMNULL("message_9005", ErrorMessage.ERROR_UPLOADFILE_PARAMNULL),
    ERROR_UPLOADFILE_TYPEERROR("message_9006",ErrorMessage.ERROR_UPLOADFILE_TYPEERROR),
    ERROR_UPLOADFILE_DECODEERROR("message_9007", ErrorMessage.ERROR_UPLOADFILE_DECODEERROR),
    ERROR_UPLOADFILE_STORAGETYPEERR("message_9008", ErrorMessage.ERROR_UPLOADFILE_STORAGETYPEERR),
    ERROR_UPLOADFILE_SIZEERR("message_9009", ErrorMessage.ERROR_UPLOADFILE_SIZEERR),
    ERROR_UPLOADFILE_NOFILE("message_9010", ErrorMessage.ERROR_UPLOADFILE_NOFILE),
    ERROR_UPLOADFILE_DOWNLOADERR("message_9012", ErrorMessage.ERROR_UPLOADFILE_DOWNLOADERR),
    ERROR_BUC_NO_EMPLOYEE_FOUND("message_6001", ErrorMessage.ERROR_BUC_NO_EMPLOYEE_FOUND),
    ERROR_BUC_FINDNOPERSONBYROLE("message_6002", ErrorMessage.ERROR_BUC_FINDNOPERSONBYROLE),
    ERROR_BUSINESS_ERROR("message_6010", ErrorMessage.ERROR_BUSINESS_ERROR),
    ERROR_BUSINESS_NODEL_PVG("message_6011", ErrorMessage.ERROR_BUSINESS_NODEL_PVG),
    ERROR_GETNOAPPUSERBYWORKNO("message_6012", ErrorMessage.ERROR_GETNOAPPUSERBYWORKNO),
    ERROR_MONITOR_GETMONITORBYID_FAIL("message_6101", ErrorMessage.ERROR_MONITOR_GETMONITORBYID_FAIL),
    ERROR_MONITOR_SAVE_PARAMERROR("message_6102", ErrorMessage.ERROR_MONITOR_SAVE_PARAMERROR),
    ERROR_MONITOR_SUBMIT_PARAMERROR("message_6103", ErrorMessage.ERROR_MONITOR_SUBMIT_PARAMERROR),
    ERROR_BASIC_SAVE_PARAMERROR("message_6104", ErrorMessage.ERROR_BASIC_SAVE_PARAMERROR),
    ERROR_BASIC_SUBMIT_PARAMERROR("message_6105",ErrorMessage.ERROR_BASIC_SUBMIT_PARAMERROR),
    ERROR_BASICANDPROJECT_UPDATE_PARAMERROR("message_6106", ErrorMessage.ERROR_BASICANDPROJECT_UPDATE_PARAMERROR),
    ERROR_APPROVAL_SUBMIT_PARAMERROR("message_6107", ErrorMessage.ERROR_APPROVAL_SUBMIT_PARAMERROR),
    ERROR_MONITOR_SUBMIT_MULTIPLE("message_6108", ErrorMessage.ERROR_MONITOR_SUBMIT_MULTIPLE),
    ERROR_FIRSTJUDGE_SUBMIT_MULTIPLE("message_6109", ErrorMessage.ERROR_FIRSTJUDGE_SUBMIT_MULTIPLE),
    ERROR_FIRSTJUDGE_LEGISBASE_TRANSFORM("message_6110", ErrorMessage.ERROR_FIRSTJUDGE_LEGISBASE_TRANSFORM),
    ERROR_SENDMAIL_ERROR("message_9010", ErrorMessage.ERROR_SENDMAIL_ERROR),
    ERROR_INPUTPARAM_NULL("message_7000", ErrorMessage.ERROR_INPUTPARAM_NULL),
    ERROR_EXCLERESOLUTION_ERROR("message_7010", ErrorMessage.ERROR_EXCLERESOLUTION_ERROR),
    ERROR_EXCLERESOLUTION_NODATA("message_7020", ErrorMessage.ERROR_EXCLERESOLUTION_NODATA),
    ERROR_INPUTPARAM_ERROR("message_7030", ErrorMessage.ERROR_INPUTPARAM_ERROR),
    ERROR_PRIMKEY_ERROR("message_7040", ErrorMessage.ERROR_PRIMKEY_ERROR),
    ERROR_UPANDDOWN_ERROR("message_7050", ErrorMessage.ERROR_UPANDDOWN_ERROR),
    ERROR_EXCLEIO_ERROR("message_7060", ErrorMessage.ERROR_EXCLEIO_ERROR),
    ERROR_EXCLETOCLASS_ERROR("message_7070", ErrorMessage.ERROR_EXCLETOCLASS_ERROR),
    ERROR_STATUTENAME_ERROR("message_7080", ErrorMessage.ERROR_STATUTENAME_ERROR),
    ERROR_STATUTEDELETE_ERROR("message_7090", ErrorMessage.ERROR_STATUTEDELETE_ERROR),
    ERROR_PROVISIONDELETE_ERROR("message_7100", ErrorMessage.ERROR_PROVISIONDELETE_ERROR),
    ERROR_PROVISIONTYPECHANGE_ERROR("message_7101", ErrorMessage.ERROR_PROVISIONTYPECHANGE_ERROR),
    ERROR_INPUTPARAMLENGTH_ERROR("message_7102", ErrorMessage.ERROR_INPUTPARAMLENGTH_ERROR),
    ERR_REPORTLINE_WORKNO_NULL("message_7501", ErrorMessage.ERR_REPORTLINE_WORKNO_NULL),
    ERR_REPORTLINE_LEVEL_NULL("message_7502", ErrorMessage.ERR_REPORTLINE_LEVEL_NULL),
    ERR_REPORTLINE_REPORTLINE_NULL("message_7503", ErrorMessage.ERR_REPORTLINE_REPORTLINE_NULL),
    ERR_REPORTLINE_LEVEL_UPTO("message_7504", ErrorMessage.ERR_REPORTLINE_LEVEL_UPTO),
    ERR_BUC_EXCEPTION("message_7505", ErrorMessage.ERR_BUC_EXCEPTION),
    ERR_WORKFLOW_EXCEPTION("message_7506", ErrorMessage.ERR_WORKFLOW_EXCEPTION);

    private String message_key;
    private String message_value;

    public static Map<String, String> map = new HashMap<String, String>();

    static {
        ParseErrorMessage[] values = ParseErrorMessage.values();
        for(ParseErrorMessage parseErrorMessage : values){
            map.put(parseErrorMessage.getMessage_key(), parseErrorMessage.getMessage_value());
        }
    }

    public static String getValue(String key){
        return map.get(key);
    }

    ParseErrorMessage(String message_key, String message_value) {
        this.message_key = message_key;
        this.message_value = message_value;
    }

    public String getMessage_key() {
        return message_key;
    }

    public String getMessage_value() {
        return message_value;
    }
}
